package com.example.jigsaw.view;

import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Rect;
import android.view.View;

import com.example.jigsaw.R;

public class GameView extends View {
	/**
	 * 屏幕密度
	 */
	private Bitmap background;
	/**
	 * 拼图图像
	 */
	private Bitmap puzzImage;
	/**
	 * 拼图区域
	 */
	private Rect puzzRect;
	/**
	 * 平图缩略区域
	 */
	private Rect thumRect;
	/**
	 * 每个拼图快被打乱的范围
	 */
	private Rect cellRect;
	/**
	 * 平图快的宽度
	 */
	private double pw;
	/**
	 * 拼图块的高度
	 */
	private double ph;
	/**
	 * 画笔
	 */
	private Paint paint;

	/*
	 * 屏幕密度
	 */
	private float density;

	public GameView(Context context) {
		super(context);
		this.paint = new Paint();
		this.paint.setColor(Color.RED);
		this.paint.setAntiAlias(true);
		this.paint.setStyle(Paint.Style.STROKE);

	}

	public GameView(Context context, float density) {
		this(context);
		this.density = density;
	}

	@Override
	protected void onSizeChanged(int w, int h, int oldw, int oldh) {

		/*
		 * 计算屏幕的大小，使高宽符合横屏的要求
		 */
		int screenW = (w > h) ? w : h;
		int screenH = (w > h) ? h : w;

		pw = (screenW - dip2px(10) - dip2px(10) - dip2px(10)) / 5.5;
		ph = (screenH - dip2px(20) - dip2px(20))
		/*
		 * 加载背景图片，按屏幕大小缩放成一张
		 */
		Bitmap bg = BitmapFactory.decodeResource(getResources(),
				R.drawable.wallpaper);

		background = Bitmap.createScaledBitmap(bg, screenW, screenH, false);

		bg.recycle();

		super.onSizeChanged(screenW, screenH, oldw, oldh);
	}

	@Override
	protected void onDraw(Canvas canvas) {
		canvas.drawBitmap(background, 0, 0, null);
	}

	private int dip2px(float dip) {

		int px = (int) (dip * density + 0.5);
		return px;

	}

}
